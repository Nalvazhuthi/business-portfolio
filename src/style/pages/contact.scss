@use "../variables/variables.scss" as var;
@use "../mixins/mixins" as mixins;

.contact {
  display: flex;
  flex-direction: column;
  gap: 50px;
  @include mixins.flex-center;
  align-items: flex-end;

  @media (max-width: var.$breakpoint-tablet) {
    padding-top: 10vh;
  }

  @media (max-width: var.$breakpoint-mobile) {
    padding-top: 5vh;
  }

  &__title {
    @include mixins.semiTransparentBackground(var.$secondary-bg-color);
    border-radius: 50px 0px 0px 50px;
    width: 35%;
    padding: 20px;
    padding-right: 30px;
    box-shadow: 20px 2px 50px -21px rgba(0, 0, 0, 0.75);
    transform: translateZ(0); // Force hardware acceleration
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;

    @media (max-width: var.$breakpoint-tablet) {
      font-size: 6vw;
      width: 50%;
      align-items: flex-start;
      font-size: 26px;
    }

    @media (max-width: var.$breakpoint-mobile) {
      font-size: 6vw;
      width: 60%;
      align-items: center; // Center align on mobile
    }
  }

  &__form {
    @include mixins.semiTransparentBackground(var.$secondary-bg-color);
    min-width: 600px;
    margin-left: 5vw;
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

    @media (max-width: var.$breakpoint-tablet) {
      min-width: 100%; // Make form width 100% on tablet
      margin-left: 0; // Remove margin on tablet
    }

    @media (max-width: var.$breakpoint-mobile) {
      min-width: 100%; // Full width on mobile
      margin: 0 0; // Remove margins on mobile
      padding: 1.5rem; // Slightly reduce padding on mobile for space efficiency
    }

    &-group {
      margin-bottom: 1.5rem;
      text-align: left;

      label {
        display: block;
        color: var.$text-color-primary;
        margin-bottom: 0.5rem;
        font-size: 1.1rem;
      }

      input,
      textarea {
        width: 100%;
        padding: 0.8rem;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        color: var.$text-color-primary;

        &::placeholder {
          color: var.$text-color-secondary;
          color: inherit;
        }

        @media (max-width: var.$breakpoint-mobile) {
          font-size: 1rem; // Ensure the input font size is readable on mobile
        }
      }

      textarea {
        resize: vertical;
        min-height: 150px;
      }
    }

    &-button {
      background-color: var.$text-color-secondary;
      color: var.$text-color-primary;
      padding: 0.8rem 2rem;
      border: none;
      border-radius: 5px;
      font-size: 1.1rem;
      cursor: pointer;
      transition: background-color 0.3s ease;


      @media (max-width: var.$breakpoint-tablet) {
        padding: 0.8rem 1.5rem; // Reduce padding on tablet
      }

      @media (max-width: var.$breakpoint-mobile) {
        padding: 0.8rem 1rem; // Reduce padding on mobile
        font-size: 1rem; // Reduce font size for smaller screens
      }
    }
  }
}
